version: '3.8'

services:
  source-mysql:
    image: mysql:5.7
    command:
      - --default-authentication-plugin=mysql_native_password
      - --binlog-format=ROW
      - --log-bin=mysql-bin
      - --server-id=1
      - --binlog-row-image=FULL
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: uatrs_db
      MYSQL_USER: uatrs_user
      MYSQL_PASSWORD: uatrs_pass
    ports:
      - "3307:3306"
    volumes:
      - ./1_mysql_initialization/sql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "-prootpass", "--protocol=tcp"]
      interval: 10s
      timeout: 10s
      retries: 20

  target-postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: uatrs_db
      POSTGRES_USER: uatrs_user
      POSTGRES_PASSWORD: uatrs_pass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uatrs_user -d uatrs_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  pgloader:
    image: dimitri/pgloader:latest
    depends_on:
      source-mysql:
        condition: service_healthy
      target-postgres:
        condition: service_healthy
    volumes:
      - ./2_postgres_migration/pgloader-config/migration.load:/migration.load
    command: pgloader /migration.load

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  debezium:
    image: debezium/connect:2.3
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - source-mysql
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: uatrs_config
      OFFSET_STORAGE_TOPIC: uatrs_offsets
      STATUS_STORAGE_TOPIC: uatrs_status
    volumes:
      - ./2_postgres_migration/debezium-config/mysql-connector.json:/kafka/connect/mysql-connector.json

  metabase:
    image: metabase/metabase:latest
    ports:
      - "3002:3000"  # HostPort:ContainerPort (Changed host port to 3001)
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: uatrs_db
      MB_DB_PORT: 5432
      MB_DB_USER: uatrs_user
      MB_DB_PASS: uatrs_pass
      MB_DB_HOST: target-postgres
    depends_on:
      target-postgres:
        condition: service_healthy

volumes:
  mysql_data:
  postgres_data:
